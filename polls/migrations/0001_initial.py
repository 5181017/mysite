# Generated by Django 3.1 on 2020-08-19 04:36

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('categoryName', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productID', models.IntegerField()),
                ('productName', models.CharField(max_length=255)),
                ('price', models.IntegerField()),
                ('imageURL', models.CharField(max_length=2048)),
                ('categoryID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.category')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('pw', models.CharField(max_length=50)),
                ('money', models.IntegerField(default=0)),
                ('address', models.CharField(max_length=2048)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewID', models.IntegerField()),
                ('reviewStar', models.IntegerField()),
                ('title', models.CharField(max_length=50, null=True)),
                ('comment', models.TextField()),
                ('productID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.products')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.user')),
            ],
        ),
        migrations.CreateModel(
            name='PayHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentID', models.IntegerField()),
                ('price', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('total', models.IntegerField()),
                ('timeStamp', models.DateTimeField(auto_now=True)),
                ('productID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.products')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.user')),
            ],
        ),
        migrations.CreateModel(
            name='ChargingHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chargeID', models.IntegerField()),
                ('timeStamp', models.DateTimeField(auto_now=True)),
                ('addMoney', models.IntegerField()),
                ('sumMoney', models.IntegerField()),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.user')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('productID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.products')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.user')),
            ],
        ),
        migrations.AddConstraint(
            model_name='cart',
            constraint=models.UniqueConstraint(fields=('userID', 'productID'), name='unique_booking'),
        ),
    ]
